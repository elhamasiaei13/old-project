package com.parvanpajooh.transportationmanagement.service.impl;

import javax.ejb.Stateless;
import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.parvanpajooh.client.common.PageList;
import com.parvanpajooh.commons.platform.ejb.ddd.application.AbstractServiceImpl;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanServiceException;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanUnrecoverableException;
import com.parvanpajooh.commons.platform.ejb.model.UserInfo;
import com.parvanpajooh.transportationmanagement.model.vo.VehicleVO;
import com.parvanpajooh.transportationmanagement.service.LogesticManagementLocalService;
import com.parvanpajooh.transportationmanagement.service.LogesticManagementService;

/**
 * 
 * @author
 *
 */
@Stateless
public class LogesticManagementServiceImpl extends AbstractServiceImpl implements LogesticManagementService {
	/**
	 * Log variable for all child classes.
	 */
	static final Logger log = LoggerFactory.getLogger(LogesticManagementServiceImpl.class);

	@Inject
	private LogesticManagementLocalService logesticManagementLocalService;

	@Override
	public PageList<VehicleVO> findVehicles(UserInfo userInfo,String term , int page , int size) throws ParvanServiceException {

		// LOG
		log.debug("Entering findVehicles(userInfo={},term={} , page={} , size={})", userInfo, term, page, size);

		PageList<VehicleVO> vehicleVOs = null;

		try {

			// get vehicles
			vehicleVOs = logesticManagementLocalService.findVehicles(term, page, size);

		} catch (ParvanServiceException e) {
			throw e;

		} catch (Exception e) {
			throw new ParvanUnrecoverableException("Error occurred while findTransportations", e);
		}

		return vehicleVOs;
	}

	@Override
	public VehicleVO getVehicle(UserInfo userInfo, Long id) throws ParvanServiceException {

		// LOG
		log.debug("Entering getVehicle(userInfo={},id={})", userInfo, id);

		VehicleVO vehicleVO = null;

		try {

			// get vehicle
			vehicleVO = logesticManagementLocalService.getVehicle(id);

		} catch (ParvanServiceException e) {
			throw e;

		} catch (Exception e) {
			throw new ParvanUnrecoverableException("Error occurred while getVehicle", e);
		}

		return vehicleVO;

	}

}
