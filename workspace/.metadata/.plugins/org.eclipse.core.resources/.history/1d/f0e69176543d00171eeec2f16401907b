package com.parvanpajooh.siteservices.service.impl;

import javax.ejb.Stateless;
import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.parvanpajooh.commons.platform.ejb.exceptions.ErrorCode;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanRecoverableException;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanServiceException;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanUnrecoverableException;
import com.parvanpajooh.commons.util.Validator;
import com.parvanpajooh.siteservices.model.vo.ContactInfoVO;
import com.parvanpajooh.siteservices.model.vo.PersonVO;
import com.parvanpajooh.siteservices.model.vo.UserGroupVO;
import com.parvanpajooh.siteservices.model.vo.UserVO;
import com.parvanpajooh.siteservices.service.IdentityManagement2LocalService;
import com.parvanpajooh.siteservices.service.adapter.IdentityManagement2ServiceAdapter;

/**
 * @author dev-03
 *
 */
@Stateless
public class IdentityManagemen2tLocalServiceImpl implements IdentityManagement2LocalService {

	/**
	 * Log variable for all child classes.
	 */
	static final Logger log = LoggerFactory.getLogger(IdentityManagemen2tLocalServiceImpl.class);

	@Inject
	private IdentityManagement2ServiceAdapter identityManagement2ServiceAdapter;

	@Override
	public UserVO createUser(PersonVO personVO,String password) throws ParvanServiceException {
		
		// LOG
		log.debug("Entering createUser(personVO={})", personVO);
		UserVO userVO = null;
		try {
			
    		if(Validator.isNull(password)){
				throw new ParvanRecoverableException("password", ErrorCode.FIELD_IS_EMPTY);
    		}

			userVO = _createUser(personVO, password);
			userVO = identityManagement2ServiceAdapter.createUser(userVO);

		} catch (ParvanServiceException e) {
			throw e;

		} catch (Exception e) {
			throw new ParvanUnrecoverableException("Error occurred while createUser", e);
		}

		return userVO;
	}
	
	
	public UserVO _createUser(PersonVO personVO,String password){
		UserVO userVO = new UserVO();
		ContactInfoVO contactInfoVO = personVO.getPrimaryContactInfo();
		
		userVO.setId( msg.getId() );
		userVO.setUserName( msg.getUserName() );
		userVO.setPassword("123456");
		userVO.setFirstName( msg.getFirstName() );
		userVO.setLastName( msg.getLastName() );
		userVO.setDisplayName( msg.getDisplayName() );
		userVO.setLocale( msg.getLocale() );
		userVO.setZoneId( msg.getZoneId() );
		userVO.setCalendar( msg.getCalendar().name() );
		userVO.setEmail( msg.getEmail() );
		userVO.setPersonUuid( msg.getPersonUuid() );
		userVO.setActive(true);
		
		
		userVO.setFirstName(personVO.getFirstNameLocal());
		userVO.setLastName(personVO.getLastNameLocal());
		userVO.setDisplayName( personVO.getDisplayName() );
		userVO.setLocale( personVO.getLocale() );
		userVO.setZoneId( personVO.getZoneId() );
		userVO.setCalendar( personVO.getCalendar().name() );
		userVO.setEmail(contactInfoVO.getEmail());
		userVO.setPersonUuid(personVO.getUuid());
		userVO.setUserName(contactInfoVO.getEmail());
		
		userVO.setPassword(password);
		UserGroupVO userGroupVO = new UserGroupVO();
		userGroupVO.setId(3L);
		
		userVO.setUserGroup( userGroupVO );
		
		return userVO;
	}
}
