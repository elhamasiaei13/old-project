package com.parvanpajooh.siteservices.service.impl;

import javax.ejb.Stateless;
import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.parvanpajooh.commons.platform.ejb.ddd.application.AbstractApplicationServiceImpl;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanServiceException;
import com.parvanpajooh.commons.platform.ejb.model.UserInfo;
import com.parvanpajooh.commons.util.Validator;
import com.parvanpajooh.siteservices.model.vo.PersonVO;
import com.parvanpajooh.siteservices.model.vo.RegisterVO;
import com.parvanpajooh.siteservices.service.ProfileManagementService;

/**
 * @author dev-03
 *
 */
@Stateless
public class ProfileManagementServiceImpl extends AbstractApplicationServiceImpl implements ProfileManagementService {

	/**
	 * Log variable for all child classes.
	 */
	static final Logger log = LoggerFactory.getLogger(ProfileManagementServiceImpl.class);

	@Inject
	private IdentityManagemen2tLocalServiceImpl identityManagemen2tLocalServiceImpl;

	@Inject
	private PersonManagementLocalServiceImpl personManagementLocalServiceImpl;

	@Override
	public void register(UserInfo userInfo, RegisterVO registerVO) throws ParvanServiceException {

		try {

			// LOG
			log.debug("Entering register( registerVO={})", registerVO);

			// save person
			PersonVO personVO = personManagementLocalServiceImpl.createPerson(registerVO);

			// create user
			identityManagemen2tLocalServiceImpl.createUser(registerVO);

			// send Email
			// jobManagementService.sendEmail(userInfo, personVO);

		} catch (ParvanServiceException e) {
			if (Validator.isNotNull(personVO.getUuid()) && Validator.isNull(userVO)) {
				personManagementLocalServiceImpl.deletePerson(userInfo, personVO.getUuid());
			}
		}

	}
}
