package com.parvanpajooh.taskmanagement.mvc;

import java.util.HashMap;
import java.util.Map;

import javax.ejb.EJB;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.parvanpajooh.common.auth.UserInfoLoader;
import com.parvanpajooh.commons.enums.SortDirectionEnum;
import com.parvanpajooh.commons.platform.ejb.model.UserInfo;
import com.parvanpajooh.taskmanagement.application.TaskApplicationService;
import com.parvanpajooh.taskmanagement.domain.model.dto.TaskChangeAssigneeCommandDto;
import com.parvanpajooh.taskmanagement.domain.model.dto.TaskChangeStateCommandDto;
import com.parvanpajooh.taskmanagement.domain.model.dto.TaskDisplayDto;
import com.parvanpajooh.taskmanagement.mvc.base.TaskCommandAbstractController;

/**
 * @author dev-03
 *
 */
@Controller
@RequestMapping("/tasks/changestate")
public class TaskChangeStateController extends TaskCommandAbstractController<TaskChangeStateCommandDto> {

	@EJB(mappedName = "java:global/taskmanagement-ear/taskmanagement-ejb/TaskApplicationServiceImpl")
	private TaskApplicationService taskApplicationService;

	@Override
	protected String getName() {
		return "taskchangestate";
	}

	protected SortDirectionEnum getDefaultSortDirection() {
		return SortDirectionEnum.Ascending;
	}

	protected String getDefaultSortCriterion() {
		return null;
	}

	/**
	 * 
	 * @param taskId
	 * @param taskChangeStateCommandDto
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/save", method = RequestMethod.POST)
	public @ResponseBody Map<String, Object> saveChangeState(String taskKey, TaskChangeStateCommandDto taskChangeStateCommandDto, HttpServletRequest request) {

		// LOG
		log.debug("Entering saveChangeState(taskChangeStateCommandDto={})", taskChangeStateCommandDto);

		Map<String, Object> result = new HashMap<String, Object>();
		UserInfo userInfo = UserInfoLoader.getInstance().getUserInfo();
		try {

			TaskDisplayDto taskDisplayDto = taskApplicationService.getTaskDisplayByTaskKey(userInfo, taskKey);
			taskApplicationService.changeTaskState(userInfo, taskChangeStateCommandDto, taskDisplayDto.getTaskId());
			result.put("status", "success");

		} catch (Exception e) {
			proccessException(e, result);
		}

		// LOG
		log.debug("Leaving saveChangeState()");
		return result;
	}
}
