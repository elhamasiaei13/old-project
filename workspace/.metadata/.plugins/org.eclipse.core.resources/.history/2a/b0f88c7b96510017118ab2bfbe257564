/**
 * 
 */
package com.parvanpajooh.client.complaintmanagement;

import java.util.List;

import com.parvanpajooh.client.common.GenericRestClient;
import com.parvanpajooh.client.common.PageList;
import com.parvanpajooh.client.common.ParvanClientException;
import com.parvanpajooh.client.common.RestClientConstants;
import com.parvanpajooh.client.complaintmanagement.model.ComplaintCategoryMsg;
import com.parvanpajooh.client.complaintmanagement.model.ComplaintMsg;
import com.parvanpajooh.client.complaintmanagement.service.ComplaintManagementApi;
import com.parvanpajooh.commons.config.Config;
import com.parvanpajooh.commons.enums.SortDirectionEnum;

import retrofit2.Call;

/**
 * @author MO
 *
 */
public class ComplaintManagementApiRestClient extends GenericRestClient<ComplaintManagementApi> {
	
	private static final String ENDPOINT_PATH = "/complaintmanagement-rest/";

	private ComplaintManagementApi complaintManagementApi;

	public ComplaintManagementApiRestClient() {
		super(
				Config.getProperty("complaintmanagement.rest.endpoint.protocol", RestClientConstants.ENDPOINT_DEF_PROTOCOL__HTTP),
				Config.getProperty("complaintmanagement.rest.endpoint.host", RestClientConstants.ENDPOINT_DEF_HOST__LOCALHOST),
				Config.getProperty("complaintmanagement.rest.endpoint.port", RestClientConstants.ENDPOINT_DEF_PORT__80),
				ENDPOINT_PATH,
				Config.getLongProperty("complaintmanagement.rest.endpoint.timeout", RestClientConstants.TIMEOUT));
		
		complaintManagementApi = super.createRestClient();
	}

	public PageList<ComplaintCategoryMsg> findComplaintCategoriesBy(
			String term,
			int page,
			int size) throws ParvanClientException {
		
		Call<List<ComplaintCategoryMsg>> call = complaintManagementApi.findComplaintCategoriesBy(term, page, size);
		return executePageCall(call);
	}

	public ComplaintCategoryMsg getComplaintCategory(Long id) throws ParvanClientException {
		Call<ComplaintCategoryMsg> call = complaintManagementApi.getComplaintCategory(id);
		return executeCall(call);
	}

	public void saveComplaint(ComplaintMsg complaintMsg) throws ParvanClientException {
		Call<Void> call = complaintManagementApi.saveComplaint(complaintMsg);
		executeCall(call);
	}

	public PageList<ComplaintMsg> findMyComplaintsBy(
			String term, 
			int page, 
			int size, 
			SortDirectionEnum sortDirection, 
			String sortCriterion) throws ParvanClientException {
		Call<List<ComplaintMsg>> call = complaintManagementApi.findMyComplaintsBy(term, page, size, sortDirection, sortCriterion);
		return executePageCall(call);
	}
}
