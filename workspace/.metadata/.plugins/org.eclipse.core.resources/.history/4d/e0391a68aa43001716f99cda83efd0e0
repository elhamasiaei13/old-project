/**
 * 
 */
package com.parvanpajooh.siteservices.service.adapter;

import javax.ejb.Stateless;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.parvanpajooh.client.common.ParvanClientException;
import com.parvanpajooh.client.identitymanagement2.Identitymanagement2ApiRestClient;
import com.parvanpajooh.client.identitymanagement2.model.UserMsg;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanServiceException;
import com.parvanpajooh.siteservices.model.vo.UserVO;


/**
 * @author dev-03
 *
 */
@Stateless
public class IdentityManagement2ServiceAdapterRest implements IdentityManagement2ServiceAdapter {

	private Identitymanagement2ApiRestClient identitymanagement2ApiRestClient;

	protected transient final Logger log = LoggerFactory.getLogger(getClass());

	public IdentityManagement2ServiceAdapterRest() {
		this.identitymanagement2ApiRestClient = new Identitymanagement2ApiRestClient();
	}
	
	@Override
	public UserVO createUser(UserVO userVO) throws ParvanServiceException {

		UserMsg userMsg = null;
		try {
			
			userMsg = userVO.toMsg();
			userMsg = identitymanagement2ApiRestClient.createUser(userMsg);

			userVO.fromMsg(userMsg);
			
		} catch (ParvanClientException e) {
			throw new ParvanServiceException(e.getMessage());
		} 
		return userVO;
	}

	@Override
	public UserVO getUserByUuid(String uuid) throws ParvanServiceException {
		UserVO userVO = null;
		UserMsg userMsg = null;
		try {
			
			userMsg = identitymanagement2ApiRestClient.loadUserByUuid(uuid);
			userVO = new UserVO();
			userVO.fromMsg(userMsg);
			
		} catch (ParvanClientException e) {
			throw new ParvanServiceException(e.getMessage());
		} 
		return userVO;
	}
	
	@Override
	public void activateUserAndSetPassword(Long id,String password) throws ParvanServiceException {

		try {
			
			identitymanagement2ApiRestClient.activateUserAndSetPassword(id, password);

		} catch (ParvanClientException e) {
			throw new ParvanServiceException(e.getMessage());
		} 
	}

	@Override
	public UserVO findUserByEmailOrMobile(String emailOrMobile) throws ParvanServiceException {

		UserVO userVO = null;
		UserMsg userMsg = null;
		try {

			userMsg = identitymanagement2ApiRestClient.findUserByEmailOrMobile(emailOrMobile);
			userVO = new UserVO();
			userVO.fromMsg(userMsg);

		} catch (ParvanClientException e) {
			throw new ParvanServiceException(e.getMessage());
		}
		return userVO;
	}
}
