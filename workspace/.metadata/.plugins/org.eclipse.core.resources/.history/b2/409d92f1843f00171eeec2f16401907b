/**
 * 
 */
package com.parvanpajooh.client.geomanagement;

import java.util.List;

import com.parvanpajooh.client.common.GenericRestClient;
import com.parvanpajooh.client.common.PageList;
import com.parvanpajooh.client.common.ParvanClientException;
import com.parvanpajooh.client.common.RestClientConstants;
import com.parvanpajooh.client.geomanagement.model.CityInfoMsg;
import com.parvanpajooh.client.geomanagement.model.CountryInfoMsg;
import com.parvanpajooh.client.geomanagement.service.GeoManagementApi;
import com.parvanpajooh.commons.config.Config;

import retrofit2.Call;

/**
 * @author MO
 *
 */
public class GeoManagementApiRestClient extends GenericRestClient<GeoManagementApi> {
	
	private static final String ENDPOINT_PATH = "/geomanagement-rest/";

	private GeoManagementApi geoManagementApi;

	public GeoManagementApiRestClient() {
		super(
				Config.getProperty("geomanagement.rest.endpoint.protocol", RestClientConstants.ENDPOINT_DEF_PROTOCOL__HTTP),
				Config.getProperty("geomanagement.rest.endpoint.host", RestClientConstants.ENDPOINT_DEF_HOST__LOCALHOST),
				Config.getProperty("geomanagement.rest.endpoint.port", RestClientConstants.ENDPOINT_DEF_PORT__80),
				ENDPOINT_PATH,
				Config.getLongProperty("geomanagement.rest.endpoint.timeout", RestClientConstants.TIMEOUT));
		
		geoManagementApi = super.createRestClient();
	}
	
	/**
	 * 
	 * @param shortCode
	 * @return
	 * @throws ParvanClientException
	 */
	public CityInfoMsg getCityByShortCode(String shortCode) throws ParvanClientException {
		Call<CityInfoMsg> call = geoManagementApi.getCityByShortCode(shortCode);
		return executeCall(call);
	}
	
	/**
	 * 
	 * @param term
	 * @param start
	 * @param length
	 * @param sortDirection
	 * @param sortCriterion
	 * @return
	 * @throws ParvanClientException
	 */
	public PageList<CityInfoMsg> findCitiesByNameOrShortCode(
			String parentCode,
			String term,
			Integer start,
			Integer length,
			String sortDirection,
			String sortCriterion) throws ParvanClientException {
		
		Call<List<CityInfoMsg>> call = geoManagementApi.findCityByNameOrShortCode(
				parentCode,
				term,
				start,
				length,
				sortDirection,
				sortCriterion);
		
		return executePageCall(call);
	}
	
	/**
	 * 
	 * @param term
	 * @param start
	 * @param length
	 * @param sortDirection
	 * @param sortCriterion
	 * @return
	 * @throws ParvanClientException
	 */
	public PageList<StateInfoMsg> findStatesByNameOrShortCode(
			String parentCode,
			String term,
			Integer start,
			Integer length,
			String sortDirection,
			String sortCriterion) throws ParvanClientException {
		
		Call<List<StateInfoMsg>> call = geoManagementApi.findStateByNameOrShortCode(
				parentCode,
				term,
				start,
				length,
				sortDirection,
				sortCriterion);
		
		return executePageCall(call);
	}
	
	/**
	 * 
	 * @param term
	 * @param start
	 * @param length
	 * @param sortDirection
	 * @param sortCriterion
	 * @return
	 * @throws ParvanClientException
	 */
	public PageList<CountryInfoMsg> findCountriesByNameOrShortCode(
			String term,
			Integer start,
			Integer length,
			String sortDirection,
			String sortCriterion) throws ParvanClientException {
		
		Call<List<CountryInfoMsg>> call = geoManagementApi.findCountryByNameOrShortCode(
				term,
				start,
				length,
				sortDirection,
				sortCriterion);
		
		return executePageCall(call);
	}

}
