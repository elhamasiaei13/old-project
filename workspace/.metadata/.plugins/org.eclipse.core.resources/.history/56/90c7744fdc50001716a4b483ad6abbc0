/**
 * 
 */
package com.parvanpajooh.siteservices.service.adapter;

import java.util.ArrayList;
import java.util.List;

import javax.ejb.Stateless;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.parvanpajooh.client.common.PageList;
import com.parvanpajooh.client.complaintmanagement.ComplaintManagementApiRestClient;
import com.parvanpajooh.client.complaintmanagement.model.ComplaintMsg;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanServiceException;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanUnrecoverableException;
import com.parvanpajooh.siteservices.model.vo.ComplaintCategoryVO;
import com.parvanpajooh.siteservices.model.vo.ComplaintVO;


/**
 * @author dev-03
 *
 */
@Stateless
public class ComplaintManagementServiceAdapterRest implements ComplaintManagementServiceAdapter {

	private ComplaintManagementApiRestClient complaintManagementApiRestClient;

	protected transient final Logger log = LoggerFactory.getLogger(getClass());

	public ComplaintManagementServiceAdapterRest() {
		this.complaintManagementApiRestClient = new ComplaintManagementApiRestClient();
	}


	@Override
	public ComplaintCategoryVO getComplaintCategory(Long id) throws ParvanServiceException {
		ComplaintCategoryVO complaintCategoryVO = null;

		try {
			ComplaintMsg complaintMsg = complaintManagementApiRestClient.getComplaint(id);

			complaintCategoryVO = new ComplaintCategoryVO();
			complaintCategoryVO.fromMsg(complaintMsg);

		} catch (Exception e) {
			throw new ParvanUnrecoverableException("Error occurred while getting agent by its id: " + id, e);
		}

		return complaintVO;
	}


	@Override
	public List<ComplaintVO> findComplaintsBy(String term, int page, int size) throws ParvanServiceException {

		List<ComplaintVO> complaintVOs = null;
		ComplaintVO complaintVO = null;

		try {

			PageList<ComplaintMsg> complaintMsgPageList = complaintManagementApiRestClient.findComplaintsBy(term, page, size);

			complaintVOs = new ArrayList<ComplaintVO>();
			for (ComplaintMsg complaintMsg : complaintMsgPageList.getElements()) {
				complaintVO = new ComplaintVO();
				complaintVO.fromMsg(complaintMsg);

				complaintVOs.add(complaintVO);
			}

		} catch (Exception e) {
			throw new ParvanUnrecoverableException("Error occurred while finding Complaints by term = " + term, e);
		}
		return complaintVOs;
	}

}
