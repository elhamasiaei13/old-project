/**
 * 
 */
package com.parvanpajooh.siteservices.service.adapter;

import java.util.ArrayList;
import java.util.List;

import javax.ejb.Stateless;

import com.parvanpajooh.client.common.PageList;
import com.parvanpajooh.client.common.ParvanClientException;
import com.parvanpajooh.client.geomanagement.GeoManagementApiRestClient;
import com.parvanpajooh.client.geomanagement.model.CityInfoMsg;
import com.parvanpajooh.commons.enums.SortDirectionEnum;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanServiceException;
import com.parvanpajooh.commons.platform.ejb.exceptions.ParvanUnrecoverableException;
import com.parvanpajooh.siteservices.model.vo.CityInfoVO;

/**
 * @author MO
 *
 */
@Stateless
public class GeoManagementAdapterImpl implements GeoManagementAdapter {

	GeoManagementApiRestClient geoManagementApiRestClient = new GeoManagementApiRestClient();
	
	@Override
	public CityInfoVO getCityByShortCode(String shortCode) throws ParvanServiceException {
		CityInfoVO returnValue = null;
		try {
			CityInfoMsg result = geoManagementApiRestClient.getCityByShortCode(shortCode);
			returnValue = _toCityInfoVO(result);
		} catch (ParvanClientException e) {
			throw new ParvanUnrecoverableException(e.getMessage());
		}
		return returnValue;
	}
	
	@Override
	public PageList<CityInfoVO> findCityByNameOrShortCode(String term, int start, int length, SortDirectionEnum sortDirection, String sortCriterion)
			throws ParvanServiceException {

		PageList<CityInfoVO> returnValue = null;
		try {
			String strSortDirection = null;
			if (sortDirection != null) {
				strSortDirection = sortDirection.toString();
			}
			PageList<CityInfoMsg> result = geoManagementApiRestClient.findCitiesByNameOrShortCode(null, term, start, length, strSortDirection, sortCriterion);
			if (result != null) {
				List<CityInfoMsg> elements = result.getElements();
				if (elements != null) {
					List<CityInfoVO> voList = new ArrayList<>(elements.size());
					for (CityInfoMsg msg : elements) {
						CityInfoVO vo = new CityInfoVO();
						vo.fro
						voList.add(vo);
					}
					returnValue = new PageList<>(voList, result.getTotal());
				}
			}
		} catch (ParvanClientException e) {
			throw new ParvanUnrecoverableException(e.getMessage());
		}
		return returnValue;
	}

}
